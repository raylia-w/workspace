/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-04-24 06:43:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.topList;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import DTO.ShopDTO;
import java.util.List;

public final class topList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Semi/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1090214156000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1521608251712L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("DTO.ShopDTO");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>푸드뷰</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/mypage.css\" />\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* .clear {height: 0px; clear: both;} */\r\n");
      out.write("#wrapper{margin:0 auto 0 auto;}\r\n");
      out.write("#contents { width: 1000px; margin: 0 auto;}\r\n");
      out.write("li{\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("}\r\n");
      out.write("small{float: right;} \r\n");
      out.write(".thumb {\r\n");
      out.write("float: left;\r\n");
      out.write("}\r\n");
      out.write(".info {\r\n");
      out.write("width: 850px;\r\n");
      out.write("height: 250px;\r\n");
      out.write("margin: 40px;\r\n");
      out.write("/* float: left; */\r\n");
      out.write("}\r\n");
      out.write(".with-review {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    min-height: 238px;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, address, cite, code, del, dfn, em, font, img, ins, q, s, samp, strike, strong, sub, sup, dl, dt, dd, ol, ul, li, fieldset, form, label, legend {\r\n");
      out.write("    border: 0 none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"wrapper\">\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/main/top.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"clear\"></div>\r\n");
      out.write("<div id=\"contents\">\r\n");
      out.write("<div class=\"basic-info-list\">\r\n");
      out.write("\t<div class=\"inner\" style=\"padding-bottom: 10px; text-align: center;\" >\r\n");
      out.write("\t");

	String type=request.getParameter("type");
	if(type.equals("카페")){
	
      out.write("\r\n");
      out.write("        <h1 class=\"title\">카페 베스트</h1>\r\n");
      out.write("        <h2 class=\"desc\">\r\n");
      out.write("        \t“카페는 정해져있고 넌 따라오기만 해”\r\n");
      out.write("        </h2>\r\n");
      out.write("    ");

	}else if(type.equals("한식")){
    
      out.write("\r\n");
      out.write("    \t<h1 class=\"title\">한식</h1>\r\n");
      out.write("        <h2 class=\"desc\">\r\n");
      out.write("        \t“어느 나라든 따뜻한 가정식이 최고야!”\r\n");
      out.write("        </h2>\r\n");
      out.write("        ");

	}else if(type.equals("일식")){
    
      out.write("\r\n");
      out.write("    \t<h1 class=\"title\">일식</h1>\r\n");
      out.write("        <h2 class=\"desc\">\r\n");
      out.write("        \t“일본을 제대로 느끼고 싶다면 이곳!”\r\n");
      out.write("        </h2>\r\n");
      out.write("        ");

	}else if(type.equals("중식")){
    
      out.write("\r\n");
      out.write("    \t<h1 class=\"title\">중식</h1>\r\n");
      out.write("        <h2 class=\"desc\">\r\n");
      out.write("        \t“여기가 중국이로구나~”\r\n");
      out.write("        </h2>\r\n");
      out.write("        ");

	}else if(type.equals("양식")){
    
      out.write("\r\n");
      out.write("    \t<h1 class=\"title\">양식</h1>\r\n");
      out.write("        <h2 class=\"desc\">\r\n");
      out.write("        \t“이게 다 무어란~? ( ͡° ͜ʖ ͡°)”\r\n");
      out.write("        </h2>\r\n");
      out.write("        ");

	}else if(type.equals("분식")){
    
      out.write("\r\n");
      out.write("    \t<h1 class=\"title\">분식</h1>\r\n");
      out.write("        <h2 class=\"desc\">\r\n");
      out.write("        \t“올해는 나도 인플루언서”\r\n");
      out.write("        </h2>\r\n");
      out.write("        ");

	}else if(type.equals("술집")){
    
      out.write("\r\n");
      out.write("    \t<h1 class=\"title\">술집</h1>\r\n");
      out.write("        <h2 class=\"desc\">\r\n");
      out.write("        \t“술이 안주를 부르고, 안주가 술을 부르는”\r\n");
      out.write("        </h2>\r\n");
      out.write("\t");

	}
	
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t");

		List<ShopDTO> s = (List<ShopDTO>) request.getAttribute("list");
		for(int i=0;i<s.size();i++){
			ShopDTO shop = new ShopDTO();
			shop = s.get(i);
	
      out.write("\r\n");
      out.write("\t<li class=\"toplist_list\">\r\n");
      out.write("\t\t<div class=\"with-review\">\r\n");
      out.write("\t\t\t<figure class=\"restaurant-item\">\r\n");
      out.write("\t\t\t<div class=\"thumb\" style=\"display:inline-block; float:left; margin-right: 30px;\">\r\n");
      out.write("\t\t\t\t<a href=\"/restaurantsinfo.do?restaurant=");
      out.print(shop.getS_id_no() );
      out.write("\"><img src=\"/img/foodPic/");
      out.print(shop.getS_name());
      out.write(".jpg\" width=\"206\" height=\"206\"></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<figcaption>\r\n");
      out.write("\t\t\t<div class=\"info\">\r\n");
      out.write("\t\t\t\t<!-- 식당이름 -->\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<span class=\"title\"><a href=\"/restaurantsinfo.do?restaurant=");
      out.print(shop.getS_id_no() );
      out.write("\" onclick=\"\"><h2>");
      out.print(shop.getS_name() );
      out.write("</h2></a></span>\r\n");
      out.write("\t\t\t\t<!-- 식당주소 -->\r\n");
      out.write("\t\t\t\t<br><br><br>\r\n");
      out.write("\t\t\t\t<p class=\"etc\">");
      out.print(shop.getS_addr() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t<p class=\"etc\">");
      out.print(shop.getS_p_no() );
      out.write("</p>\r\n");
      out.write("\t\t\t<br><br><br><br>\r\n");
      out.write("\t\t\t<a href=\"/restaurantsinfo.do?restaurant=");
      out.print(shop.getS_id_no() );
      out.write("\" class=\"btn-detail\" onclick=\"\"><small>");
      out.print(shop.getS_name() );
      out.write(" 더보기 &gt;</small></a>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t</figcaption>\r\n");
      out.write("\t\t\t</figure>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t</li>\r\n");
      out.write("\t\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"clear\"></div>\r\n");
      out.write("<div id=\"footer\">\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/main/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
